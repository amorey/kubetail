(function(){"use strict";let e=null,a=null,n=!1,l="",i="1",r=null;const d=()=>{a!==null&&(clearTimeout(a),a=null),e&&(e.onopen=null,e.onmessage=null,e.onclose=null,e.onerror=null,e=null)},y=(s,p,c)=>{n||(r=c,e=new WebSocket(s,p),e.onopen=()=>{l=e?.protocol||"",self.postMessage({type:"CONNECTED",protocol:l}),e?.send(JSON.stringify({type:"connection_init"}))},e.onmessage=o=>{try{const t=JSON.parse(o.data);switch(t.type){case"connection_ack":{if(i=String(Date.now()),!n&&r){const S=l==="graphql-ws"?"start":"subscribe";e?.send(JSON.stringify({id:i,type:S,payload:r}))}break}case"next":case"data":{self.postMessage({type:"MESSAGE",data:t});break}case"error":case"connection_error":{self.postMessage({type:"ERROR",error:JSON.stringify(t)});break}case"ping":{e?.send(JSON.stringify({type:"pong"}));break}case"complete":case"ka":break;default:self.postMessage({type:"MESSAGE",data:t});break}}catch(t){self.postMessage({type:"ERROR",error:t instanceof Error?t.message:"JSON parse error"})}},e.onclose=o=>{self.postMessage({type:"DISCONNECTED",code:o.code,reason:o.reason}),!n&&(self.postMessage({type:"RECONNECTING"}),a=self.setTimeout(()=>{a=null,r&&y(s,p,r)},3e3))},e.onerror=()=>{self.postMessage({type:"ERROR",error:"WebSocket connection error"})})},f=()=>{n=!0,d();try{if(e&&e.readyState===WebSocket.OPEN){const s=l==="graphql-ws"?"stop":"complete";e.send(JSON.stringify({id:i,type:s})),e.close(1e3,"client complete")}else e&&(e.readyState===WebSocket.CONNECTING||e.readyState===WebSocket.CLOSING)&&e.close()}catch{}},g=s=>{const{type:p}=s.data;switch(p){case"CONNECT":{const{url:c,protocols:o,payload:t}=s.data;n=!1,y(c,o,t);break}case"DISCONNECT":{f();break}case"SEND":{const{data:c}=s.data;e&&e.readyState===WebSocket.OPEN&&e.send(c);break}default:self.postMessage({type:"ERROR",error:`Unknown message type: ${s.data.type}`})}};self.addEventListener("message",g)})();
