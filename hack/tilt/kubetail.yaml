kind: ConfigMap
apiVersion: v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
data:
  config.yaml: |
    allowed-namespaces: []
    dashboard:
      addr: :8080
      auth-mode: auto
      base-path: /
      cluster-api-endpoint: http://kubetail-cluster-api.kubetail-system.svc:8080
      environment: cluster
      gin-mode: debug
      ui:
        cluster-api-enabled: true
      session:
        secret: REPLACEME
        cookie:
          name: kubetail_dashboard_session
          path: /
          max-age: 2592000
          secure: false
          http-only: true
          same-site: lax
      csrf:
        enabled: true
        secret: REPLACEME
        field-name: csrf_token
        cookie:
          name: kubetail_dashboard_csrf
          path: /
          max-age: 43200
          secure: false
          http-only: true
          same-site: strict
      logging:
        enabled: true
        level: debug
        format: pretty
        access-log:
          enabled: true
          hide-health-checks: true
      tls:
        enabled: false
        cert-file:
        key-file:
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
data:
  config.yaml: |
    allowed-namespaces: []
    cluster-api:
      addr: :8080
      base-path: /
      gin-mode: debug
      agent-dispatch-url: kubernetes://kubetail-cluster-agent:50051
      csrf:
        enabled: true
        secret: REPLACEME
        field-name: csrf_token
        cookie:
          name: kubetail_cluster_api_csrf
          path: /
          max-age: 43200
          secure: false
          http-only: true
          same-site: strict
      logging:
        enabled: true
        level: debug
        format: pretty
        access-log:
          enabled: true
          hide-health-checks: true
      tls:
        enabled: true
        cert-file: /etc/tls/tls.crt
        key-file: /etc/tls/tls.key
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
data:
  config.yaml: |
    allowed-namespaces: []
    cluster-agent:
      addr: :50051
      logging:
        enabled: true
        level: debug
        format: pretty
      tls:
        enabled: false
        cert-file:
        key-file:
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-dashboard
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
rules:
- apiGroups: [""]
  resources: [namespaces, nodes]
  verbs: [get, list, watch]
- apiGroups: ["", apps, batch]
  resources: [cronjobs, daemonsets, deployments, jobs, pods, pods/log, replicasets, statefulsets]
  verbs: [get, list, watch]
- apiGroups: [authentication.k8s.io]
  resources: [tokenreviews]
  verbs: [create]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-dashboard
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubetail-dashboard
subjects:
- kind: ServiceAccount
  name: kubetail-dashboard
  namespace: kubetail-system
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
rules:
- apiGroups: [discovery.k8s.io]
  resources: [endpointslices]
  verbs: [list, watch]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
roleRef:
  kind: Role
  name: kubetail-dashboard
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: kubetail-dashboard
  namespace: kubetail-system    
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: dashboard
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubetail
        app.kubernetes.io/component: dashboard
    spec:
      serviceAccountName: kubetail-dashboard
      containers:
      - name: kubetail-dashboard
        image: kubetail-dashboard
        ports:
        - name: http
          protocol: TCP
          containerPort: 8080
        args:
        - --config=/etc/kubetail/config.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/kubetail
          readOnly: true
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 30
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 30
          periodSeconds: 5
          failureThreshold: 3
        resources: {}
      volumes:
      - name: config
        configMap:
          name: kubetail-dashboard
---
kind: Service
apiVersion: v1
metadata:
  name: kubetail-dashboard
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
spec:
  selector:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: dashboard
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: http
    appProtocol: http
---    
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cluster-api
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
rules:
- apiGroups: [""]
  resources: [nodes]
  verbs: [get, list, watch]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cluster-api
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubetail-cluster-api
subjects:
- kind: ServiceAccount
  name: kubetail-cluster-api
  namespace: kubetail-system
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
rules:
- apiGroups: [discovery.k8s.io]
  resources: [endpointslices]
  verbs: [list, watch]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
roleRef:
  kind: Role
  name: kubetail-cluster-api
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: kubetail-cluster-api
  namespace: kubetail-system    
---
apiVersion: v1
kind: Secret
metadata:
  name: kubetail-cluster-api-tls
  namespace: kubetail-system
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ0VENDQXNtZ0F3SUJBZ0lVY0psa3k1ODNlYjJxUjRqNFdsSDA2elZaa25Fd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZqRVVNQklHQTFVRUF3d0xhM1ZpWlhSaGFXd3RZMkV3SUJjTk1qVXdOVEk1TVRReE9EQXlXaGdQTWpFeQpOVEExTURVeE5ERTRNREphTUlHSk1Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDVGxreEVUQVBCZ05WCkJBY01DRTVsZHlCWmIzSnJNUkV3RHdZRFZRUUtEQWhMZFdKbGRHRnBiREVVTUJJR0ExVUVDd3dMUlc1bmFXNWwKWlhKcGJtY3hNVEF2QmdOVkJBTU1LR3QxWW1WMFlXbHNMV05zZFhOMFpYSXRZWEJwTG10MVltVjBZV2xzTFhONQpjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdHpYUTlDSFdGCkVQWGduWDVDVFI0NkVscG9zL0VMRkY1UEc3SEh0VGNKTWFad3hCTlV3TlRFdUpJeFRDUS93VWNsUUNsZlhLRmwKZWk4WGlWcExjTjJOeWlHWTFhQmk2YXJlOUVUM0lXSHN6YzYrdnZXdG9va0JpVXQ3bXVSSnRTYy9sUDVYWm1segp5QXE1R3JDNFVCUzJPakdxZnBBU0VYZWpSK2E1V01iR2VXMm1COGh5QmcwejFJRnVKYzJmcExCVG9PMHpqUEx2Ck85a1U2Q1htZmhqbExqU1B5N2RJSDlQZ0NLZzJMcytycjdYUFZEQ1R4VWtMZExzN0U3c3JoL0FCb0tTNk16bXgKSEtIUkVhbWFYVzU0dm14VkNkQ0xwcjI0am1FaVRKdTQ2SUQvUWVFNjZDZjh0aFR1NWxZaTRmK0wzbFR2K0RaZQpMZXltQjFUaHFXeC9BZ01CQUFHamdiQXdnYTB3YXdZRFZSMFJCR1F3WW9Jb2EzVmlaWFJoYVd3dFkyeDFjM1JsCmNpMWhjR2t1YTNWaVpYUmhhV3d0YzNsemRHVnRMbk4yWTRJMmEzVmlaWFJoYVd3dFkyeDFjM1JsY2kxaGNHa3UKYTNWaVpYUmhhV3d0YzNsemRHVnRMbk4yWXk1amJIVnpkR1Z5TG14dlkyRnNNQjBHQTFVZERnUVdCQlNaZFJCUQpjcWo1WDlUUDVwcThQMnBBejJPZUpUQWZCZ05WSFNNRUdEQVdnQlJ6RXlYMS8zMGpJVW9wb0ZEL2JweklnTmk0Clh6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFOWTc5QUo0Nnh1dTdTZnRBZjZhVHZ1R0E3WVNuZXo0QXlyOXcKNmx4V2Q2WlFNdU9vdGZ4ZldZbkhHN2tWM3FPdnF1Y3RwNHJjY09ZTUF6QnFhNmpFNGtZck9qR0Y5UFE5NWJvRAowVXpCc1JmUGhReGxPdllObTgwUDBLOWIyTXpJQmNtSlhxS1JxRFRhZW12cEl4YlRFNnRGa1ZRYXg0UEkwSVczCk9maGdzNWk2czRCYkhmNWZ0UkNBVS90UVoxSVBDd2dWODhlQTRGeE5uY2twTlNiSDhTWnl0SjBOaEU1MEp5dWkKTVplT3FWaVliRGpaVXpNK2Y4QjBxMnlEL3NPWmMxc245TU9SK0Z1aHlWTGhKNldmcnVpNW5NOTZES0haZm8yUgpOTjVFQis3ajZrRzV5d0xyUXZJdUdjd2p3Q2NkSXhweEIvODRhc2hNQkRJZEl1MEo5QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRQ3R6WFE5Q0hXRkVQWGcKblg1Q1RSNDZFbHBvcy9FTEZGNVBHN0hIdFRjSk1hWnd4Qk5Vd05URXVKSXhUQ1Evd1VjbFFDbGZYS0ZsZWk4WAppVnBMY04yTnlpR1kxYUJpNmFyZTlFVDNJV0hzemM2K3Z2V3Rvb2tCaVV0N211Ukp0U2MvbFA1WFptbHp5QXE1CkdyQzRVQlMyT2pHcWZwQVNFWGVqUithNVdNYkdlVzJtQjhoeUJnMHoxSUZ1SmMyZnBMQlRvTzB6alBMdk85a1UKNkNYbWZoamxMalNQeTdkSUg5UGdDS2cyTHMrcnI3WFBWRENUeFVrTGRMczdFN3NyaC9BQm9LUzZNem14SEtIUgpFYW1hWFc1NHZteFZDZENMcHIyNGptRWlUSnU0NklEL1FlRTY2Q2Y4dGhUdTVsWWk0ZitMM2xUditEWmVMZXltCkIxVGhxV3gvQWdNQkFBRUNnZ0VBSEZpMk1oN01rck9LOC9qMmpFSytxMzJ0MEREZm4wMG0rbzVnOGErdElSWHEKSXdTS2NKZ2VFUDJzeVFIZ1VhT28xN3IrRHh4eEF3elVCeFNJVjdzNTcxNW9iMkJtNUdzSm9EWnYxR3lyUE5wRApuaTc2cStOUlVYWlQ0Tk9JNkkvMVdFbnBMUUVQaHVvNVVYKzRhSlNWdVlqYjY5dWJqTTdiZ3BQVXMzc2haR0pKCnpmU3pMN3A4aWJBUzZ4S0RpRE9xaWh5bmZ6Zkh6YkxyVDBiWkFqZUh3eStWT0NWNGQ2Q3hnUnlpczVHeXR6K1cKZUxQM1dzQ2l0RWV5dDZsc24rR2tVbHJXTWpBak43VmJUelNVN1N3eUI4ZDJNcFovSENXcVJqY3BneVhIUm03OApiTTJHV2hHOTVkYi9xcHc2amZOSGpLTENYUUIvdi9YY255QkRacWF5UlFLQmdRRFpoK21qby8yMzQzeUJyYVJHCk1VckJmZzJZTzhoWUQ0Nm5SclZzQVlBOE0zaTBpckVHWC83MlNNZUx6ZEtJKzI0OCtTcUg0WlN6OHVoam5iWnUKRXNvcUNCZlRqcWZpeGI0Y2IwZjcrdW5YbmRmZXBVNGVYSWxIRjlUL2licHVpd3RVVkEya1pOSit0aXVGZE9abQoxWUVtcXREYTlrTWlZb0JSVDNJWGd3NGV1d0tCZ1FETWlkMmdYYUpNaFJwNThVcE1HL0lmZFdRSUZqQ3EreE1DCndTbFZ0cEF0czEyQlZmQ1JYck85dnVXSG5yUzNyZEZKc2hBd3hhTTVwdVlUYVd2R3RXVzVNNHpSek5sZEdDSm8KMWZnUEJMSzh0NDNpNDJHV0o2UFlsRUp6YjNzOTg0TE9RUWl0TEN6cTdkMHdSNTk1cTZCZUFDRHZvTzlrRGI3MAo3cXgxZFlSSERRS0JnUURZa3pHeGc5ZGFtdm5lSG1SOG9oemNra1MwdVdpWkREd3FIUU1KbW1EekR3ZnhNRmhaCmtYL0Y4dVlCTWhXWDNrUitIbEVTNGl2c0VUNy8xd2pIaEp1VXgyUDVkSUdBRFFKZlN3ZnZQM3hMK05IdzBNSDcKQm9TQ3JKNmJJS1BsNVRlTmFQWUFJNFZUTk1vVjRESjRWYjkxSVFJNXpvOCtqN1ZUdnZaSHBHcU5ld0tCZ1FDbQpMMTNpN2pEdit6V0gzb1IvVWpWbldmbnNtQnJ5MFF5aE1GQmxVKy9STWVySEt3eExFS2I1aENENkQvakZSSFRICmErVzd1dGpqL3JieERyYUN2Ti9wbWZqUWZhQWVBMzN4citmY1MvVHRZRFhvSXRjbktRMzI2bjhUUzREVzFRTnkKa1dSN1Qya3ZlQlEvSmZKczZRVmpXcmRuKzFxRjhLVTJYTFhDdWJqQUFRS0JnUUNJdStFckM5d285ckRiWllnOApnTGxmRFRuR3pZRWFKdW1sVnZ6THVnRlAzQjFJSzA5VVdva0pzQVhuVjIyY2pBNCt3K2FURkl1cE53NU10dDc5CnJRL2UyUEl4YnhoRThCMU5zWDJKbStHM1doUlh4MFpLZTBiczQ1ck9WLzJIVENCQjArZ0NOdnlnRDZscElGb0cKSlNDbWFzeExTZzRmUGtQajMxWUdMWGVRRGc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: cluster-api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubetail
        app.kubernetes.io/component: cluster-api
    spec:
      serviceAccountName: kubetail-cluster-api
      containers:
      - name: kubetail-cluster-api
        image: kubetail-cluster-api
        ports:
        - name: http
          protocol: TCP
          containerPort: 8080
        args:
        - --config=/etc/kubetail/config.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/kubetail
          readOnly: true
        - name: tls
          mountPath: /etc/tls
          readOnly: true
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 30
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 30
          periodSeconds: 5
          failureThreshold: 3
        resources: {}
      volumes:
      - name: config
        configMap:
          name: kubetail-cluster-api
      - name: tls
        secret:
          secretName: kubetail-cluster-api-tls
---
kind: Service
apiVersion: v1
metadata:
  name: kubetail-cluster-api
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
spec:
  selector:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: http
    appProtocol: http
---
kind: APIService
apiVersion: apiregistration.k8s.io/v1
metadata:
  name: v1.api.kubetail.com
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-api
spec:
  service:
    name: kubetail-cluster-api
    namespace: kubetail-system
    port: 8080
  group: api.kubetail.com
  version: v1
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lVTFYvRWNrTUx5SGdrOGs1dDF6aFVSMFp0MUZRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZqRVVNQklHQTFVRUF3d0xhM1ZpWlhSaGFXd3RZMkV3SUJjTk1qVXdOVEk1TVRNd05ESXlXaGdQTWpFeQpOVEExTURVeE16QTBNakphTUJZeEZEQVNCZ05WQkFNTUMydDFZbVYwWVdsc0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0alRJVFQyN1AwTDg1aU9qcktySnl5L1dVRm1VcW9WSXNwM2cKUnZpVitzUmRuVFVDOG54clQxOElGcUM1K3dhWkNCM2RZYi9wNUdGOVNWLzNQcDByZ1ROSlI1M3pRbkNtMVh1MwpOZ1J1bVViR3ZISVpNaWc5L1k1S0tseDNXWFBuWFY0ZTUvVmE4dHJaYmVFTURFTG5QTitZbU9Hemhud1hZR3gxCnI2YjBkbkU1aVlxWnkrUFo3eVdFeTZWMjRRcjlTSkdpdE1wUGc3ZTZKVCtTVFY0T1JWN3B6YTRVLzl4bUtvWUQKSG1nbGxpcHYyZXZkbjhwOHpIdTJkdFo0VWVXLzAyOXcyTWlHRmxOY3AreXI0bHlPVzRwSTAzSjIwTnB4VVRpdQp6dlIvTzB6Y3hmYTdwaERaK2JnWTNwdW8yN3BBS3ptc0JWdU5tR09VeGpjRkJyb0t3d0lEQVFBQm8xTXdVVEFkCkJnTlZIUTRFRmdRVWN4TWw5Zjk5SXlGS0thQlEvMjZjeUlEWXVGOHdId1lEVlIwakJCZ3dGb0FVY3hNbDlmOTkKSXlGS0thQlEvMjZjeUlEWXVGOHdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBZ3hzVUNnckl6SmZZRUFZbHY2QlJ1VXJlcXlpRlpubGVwbm9kOEdsTExWYkxzWWdhQ2orWHdOeHlqeWJICjlkWHhUbFBCR2YvRXJndUdMdG45L0d4N05uZldkaVkrOVVwNEM5VXFNR3M4YUQ1VlpiZzQvNzg1N2pIUUNyOTQKSE5QWjJGc0U3N3dFck80am9rNmQzQjlFNVZDYlE1TTMvR05zK2Z4Q2NFSTJ0a2VBUmFBWnRPd2tCSGlVRmRrKwpGdjdidjRrWGdxOWx1Rm9sYjlmUWlSZkJlcEtzK2Z4Qm5FRzFmTHhEclByT2E4WmhzdjNnS1I4WUFtRHdzbXZsCkNJNi80R0p4aXoyREk1bmtoM2RmYkFlRTlpUjlKYkJXNWZhbXF2dHdNSFJ5aXRyMmtibHFXaTNNanBLenRWODEKc0x0Q2xVeFgvWmZ6blU2Nm1zSkt2UDhNbWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 100
  versionPriority: 20
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: cluster-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubetail
        app.kubernetes.io/component: cluster-agent
    spec:
      serviceAccountName: kubetail-cluster-agent
      containers:
      - name: kubetail-cluster-agent
        image: kubetail-cluster-agent
        ports:
        - name: grpc
          protocol: TCP
          containerPort: 50051
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        args:
        - --config=/etc/kubetail/config.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/kubetail
          readOnly: true
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        readinessProbe:
          grpc:
            port: 50051
          initialDelaySeconds: 10
          timeoutSeconds: 30
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          grpc:
            port: 50051
          initialDelaySeconds: 10
          timeoutSeconds: 30
          periodSeconds: 5
          failureThreshold: 3
        resources: {}
      volumes:
      - name: config
        configMap:
          name: kubetail-cluster-agent
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
---
kind: Service
apiVersion: v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: kubetail-cluster-agent
  namespace: kubetail-system
  labels: 
    app.kubernetes.io/name: kubetail
    app.kubernetes.io/component: cluster-agent
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kubetail
      app.kubernetes.io/component: cluster-agent
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: kubetail
          app.kubernetes.io/component: cluster-api
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubetail-testuser
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-testuser
rules:
- apiGroups: ["", apps, batch]
  resources: [cronjobs, daemonsets, deployments, jobs, namespaces, nodes, pods, pods/log, replicasets, statefulsets]
  verbs: [get, list, watch]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-testuser
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubetail-testuser
subjects:
- kind: ServiceAccount
  name: kubetail-testuser
  namespace: default
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-testuser
  namespace: kubetail-system
rules:
- apiGroups: [discovery.k8s.io]
  resources: [endpointslices]
  verbs: [list, watch]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubetail-testuser
  namespace: kubetail-system
roleRef:
  kind: Role
  name: kubetail-testuser
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: kubetail-testuser
  namespace: default
